/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

//import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.*;
//import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import proyectoferreteria.Factura;
 
/**
 *
 * @author VícAlex
 */
public class menuFacturas extends javax.swing.JFrame implements Runnable {
   
    String  hora,minuto,segundo,ampm,dia,mes,anio;
    Thread h1;
    
    ArrayList<Factura> facturas;
    public menuFacturas() {
        facturas = new ArrayList<>();
        initComponents();
        setLocationRelativeTo(null);
        h1 = new Thread((Runnable) this);
        h1.start();
    }

    public int calculaSemana(Calendar fecha){
        int sem=0;
        int sel=-1;
        
        fecha.setFirstDayOfWeek( Calendar.MONDAY);
        fecha.setMinimalDaysInFirstWeek( 4 );
        
        
        sem=fecha.get(Calendar.WEEK_OF_YEAR); 
        sel=fecha.get(Calendar.WEEK_OF_MONTH);
        System.out.println(fecha.getWeeksInWeekYear());
        if (fecha.getWeeksInWeekYear()==53)
            sem=sem-1;
        if (fecha.get(Calendar.MONTH)==2)
            sem=sem+1;
        switch(sel){
            case 1: sem=sem-5;
                break;
            case 2: sem=sem-4;
                break;
            case 3: sem=sem-3;
                break;
            case 4: sem=sem-2;
                break;
            case 5: sem=sem-1;
        }  
        return sem;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistroContable = new javax.swing.JTable();
        btnregresar = new javax.swing.JPanel();
        txtRegresar = new javax.swing.JLabel();
        comboFecha = new javax.swing.JComboBox<>();
        txtFechaInicio = new javax.swing.JLabel();
        txtFechaFinal = new javax.swing.JLabel();
        dateInicio = new com.toedter.calendar.JDateChooser();
        dateFinal = new com.toedter.calendar.JDateChooser();
        txtMostrarSegun = new javax.swing.JLabel();
        txtpag = new javax.swing.JLabel();
        btnPagAtras = new javax.swing.JPanel();
        txtPrePag = new javax.swing.JLabel();
        btnPagSig = new javax.swing.JPanel();
        txtPostPag = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JPanel();
        txtRegresar1 = new javax.swing.JLabel();
        txtReloj = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        txtLocal = new javax.swing.JLabel();
        txtInventario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        panel1.setBackground(new java.awt.Color(16, 135, 60));

        panel2.setBackground(new java.awt.Color(10, 91, 40));
        panel2.setAlignmentX(1.0F);
        panel2.setAlignmentY(1.0F);

        tablaRegistroContable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tablaRegistroContable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Sub-Total", "IVA", "Total", "Numero de Factura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaRegistroContable);
        if (tablaRegistroContable.getColumnModel().getColumnCount() > 0) {
            tablaRegistroContable.getColumnModel().getColumn(0).setPreferredWidth(50);
            tablaRegistroContable.getColumnModel().getColumn(1).setPreferredWidth(75);
            tablaRegistroContable.getColumnModel().getColumn(2).setPreferredWidth(75);
            tablaRegistroContable.getColumnModel().getColumn(3).setPreferredWidth(75);
        }

        btnregresar.setBackground(new java.awt.Color(16, 135, 61));
        btnregresar.setPreferredSize(new java.awt.Dimension(96, 34));
        btnregresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnregresarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnregresarMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnregresarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnregresarMouseEntered(evt);
            }
        });
        btnregresar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRegresar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtRegresar.setForeground(new java.awt.Color(255, 255, 255));
        txtRegresar.setText(" Regresar ");
        btnregresar.add(txtRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 30));

        comboFecha.setBackground(new java.awt.Color(16, 135, 61));
        comboFecha.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        comboFecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "semana", "mes", "año" }));
        comboFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 155, 81)));
        comboFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFechaActionPerformed(evt);
            }
        });

        txtFechaInicio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtFechaInicio.setForeground(new java.awt.Color(255, 255, 255));
        txtFechaInicio.setText("Fecha Incio:");

        txtFechaFinal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtFechaFinal.setForeground(new java.awt.Color(255, 255, 255));
        txtFechaFinal.setText("Fecha Final:");

        dateInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dateInicioMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dateInicioMouseReleased(evt);
            }
        });

        txtMostrarSegun.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtMostrarSegun.setForeground(new java.awt.Color(255, 255, 255));
        txtMostrarSegun.setText("Mostrar Segun:");

        txtpag.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtpag.setForeground(new java.awt.Color(255, 255, 255));
        txtpag.setText("Pag: 1 -");

        btnPagAtras.setBackground(new java.awt.Color(16, 135, 61));
        btnPagAtras.setPreferredSize(new java.awt.Dimension(96, 34));
        btnPagAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPagAtrasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPagAtrasMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnPagAtrasMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnPagAtrasMouseReleased(evt);
            }
        });
        btnPagAtras.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPrePag.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        txtPrePag.setForeground(new java.awt.Color(255, 255, 255));
        txtPrePag.setText("<");
        btnPagAtras.add(txtPrePag, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 20, 30));

        btnPagSig.setBackground(new java.awt.Color(16, 135, 61));
        btnPagSig.setPreferredSize(new java.awt.Dimension(96, 34));
        btnPagSig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnPagSigMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnPagSigMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPagSigMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPagSigMouseEntered(evt);
            }
        });
        btnPagSig.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPostPag.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        txtPostPag.setForeground(new java.awt.Color(255, 255, 255));
        txtPostPag.setText(">");
        btnPagSig.add(txtPostPag, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 20, 30));

        btnBuscar.setBackground(new java.awt.Color(16, 135, 61));
        btnBuscar.setPreferredSize(new java.awt.Dimension(96, 34));
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBuscarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBuscarMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
        });
        btnBuscar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRegresar1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        txtRegresar1.setForeground(new java.awt.Color(255, 255, 255));
        txtRegresar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtRegresar1.setText("Mostrar");
        btnBuscar.add(txtRegresar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 30));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnregresar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(txtFechaFinal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(txtFechaInicio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtMostrarSegun)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(306, 306, 306)
                                .addComponent(btnPagAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtpag, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPagSig, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(22, 22, 22))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(dateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMostrarSegun))
                            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtFechaFinal)
                                .addComponent(dateFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtpag, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPagAtras, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPagSig, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnregresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        txtReloj.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtReloj.setForeground(new java.awt.Color(255, 255, 255));
        txtReloj.setText("Reloj");

        txtFecha.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(255, 255, 255));
        txtFecha.setText("Fecha");

        txtLocal.setFont(new java.awt.Font("Arial Black", 2, 24)); // NOI18N
        txtLocal.setForeground(new java.awt.Color(255, 255, 255));
        txtLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ultrpequeño-05.png"))); // NOI18N
        txtLocal.setText("Ferreluso");
        txtLocal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(10, 91, 40)));

        txtInventario.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        txtInventario.setForeground(new java.awt.Color(255, 255, 255));
        txtInventario.setText("Facturas");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtInventario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 560, Short.MAX_VALUE)
                .addComponent(txtFecha)
                .addGap(18, 18, 18)
                .addComponent(txtReloj)
                .addGap(29, 29, 29))
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInventario)
                    .addComponent(txtReloj)
                    .addComponent(txtFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnregresarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseEntered
        //crea el borde del "boton"
        btnregresar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnregresarMouseEntered

    private void btnregresarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseExited
        // cuando el raton sale del boton
        btnregresar.setBorder(null);
    }//GEN-LAST:event_btnregresarMouseExited

    private void btnregresarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMousePressed
        // cuando se presiona el boton
        btnregresar.setBorder(null);
    }//GEN-LAST:event_btnregresarMousePressed

    private void btnregresarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        btnregresar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
        menuEntrada obj = new menuEntrada();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnregresarMouseReleased

    private void btnPagAtrasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagAtrasMouseEntered
        //crea el borde del "boton"
        btnPagAtras.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnPagAtrasMouseEntered

    private void btnPagAtrasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagAtrasMouseExited
        // cuando el raton sale del boton
        btnPagAtras.setBorder(null);
    }//GEN-LAST:event_btnPagAtrasMouseExited

    private void btnPagAtrasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagAtrasMousePressed
        // cuando se presiona el boton
        btnPagAtras.setBorder(null);
    }//GEN-LAST:event_btnPagAtrasMousePressed

    private void btnPagAtrasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagAtrasMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        btnPagAtras.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnPagAtrasMouseReleased

    private void btnPagSigMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagSigMouseEntered
        //crea el borde del "boton"
        btnPagSig.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnPagSigMouseEntered

    private void btnPagSigMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagSigMouseExited
        // cuando el raton sale del boton
        btnPagSig.setBorder(null);
    }//GEN-LAST:event_btnPagSigMouseExited

    private void btnPagSigMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagSigMousePressed
        // cuando se presiona el boton
        btnPagSig.setBorder(null);
    }//GEN-LAST:event_btnPagSigMousePressed

    private void btnPagSigMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPagSigMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        btnPagSig.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnPagSigMouseReleased

    private void dateInicioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateInicioMouseReleased
        JOptionPane.showMessageDialog(null,"Seleccionado");
    }//GEN-LAST:event_dateInicioMouseReleased

    private void dateInicioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateInicioMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_dateInicioMousePressed

    private void comboFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFechaActionPerformed
        String[] columna = { "Fecha", "SubTotal","Impuestos","Ingreso Neto"};
            DefaultTableModel modeloTabla = new DefaultTableModel(null,columna){
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                return false;
                //se puede indicar por comlunas o finlas editables
            }
        };
        //ordenar por  defecto
        if(comboFecha.getSelectedIndex()== 0){
            String fecha = null;
            SimpleDateFormat formato = new SimpleDateFormat("MM/dd/yyyy");
            for(Factura e: facturas){
                if (e.getFecha() != null) {
                    fecha = formato.format(e.getFecha().getTime());
                }
                String[] row = {String.valueOf(e.getFecha().get(Calendar.DAY_OF_MONTH)+"/"
                                +(e.getFecha().get(Calendar.MONTH)+1)+"/"+e.getFecha().get(Calendar.YEAR)),
                                String.valueOf(e.getSubTotal()),
                                String.valueOf(e.getTotalIVA()),
                                String.valueOf(e.getPrecioT())
                                };
                modeloTabla.addRow(row);
            }
        }
        //ordenar por semana
        if(comboFecha.getSelectedIndex()== 1){
            int tamanio = facturas.size();
            Factura agrupado = new Factura();
            
            
            for(int i=0; i < tamanio; i++){
                Factura e = facturas.get(i);
                int a = calculaSemana(e.getFecha());
                System.out.println(e.getNumFactura()+">>"+calculaSemana(e.getFecha()));
                agrupado.setSubTotal(e.getSubTotal());
                agrupado.setTotalIVA(e.getTotalIVA());
                agrupado.setPrecioT(e.getPrecioT());
                while(++i < tamanio && calculaSemana(e.getFecha()) == calculaSemana(facturas.get(i).getFecha())
                            && e.getFecha().get(Calendar.YEAR) == facturas.get(i).getFecha().get(Calendar.YEAR)){
                    System.out.println(">>2 "+facturas.get(i).getFecha().getWeeksInWeekYear());
                    agrupado.setSubTotal(agrupado.getSubTotal() + facturas.get(i).getSubTotal());
                    agrupado.setTotalIVA(agrupado.getTotalIVA() + facturas.get(i).getTotalIVA());
                    agrupado.setPrecioT(agrupado.getPrecioT() + facturas.get(i).getPrecioT());
                }
                i -= 1;
                System.out.println(calculaSemana(facturas.get(i).getFecha()));
                
                String[] row = {String.valueOf(calculaSemana(e.getFecha()) + " - " + e.getFecha().get(Calendar.YEAR)),
                                String.valueOf(agrupado.getSubTotal()),
                                String.valueOf(agrupado.getTotalIVA()),
                                String.valueOf(agrupado.getPrecioT())
                                };
                modeloTabla.addRow(row);
            }
            
        }
        //ordenar por mes
        if(comboFecha.getSelectedIndex()== 2){
            int tamanio = facturas.size();
            Factura agrupado = new Factura();
            
            for(int i=0; i < tamanio; i++){
                Factura e = facturas.get(i);
                System.out.println(facturas.get(i).getFecha().get(Calendar.MONTH));
                agrupado.setSubTotal(e.getSubTotal());
                agrupado.setTotalIVA(e.getTotalIVA());
                agrupado.setPrecioT(e.getPrecioT());
                while(++i < tamanio && e.getFecha().get(Calendar.MONTH) == facturas.get(i).getFecha().get(Calendar.MONTH)
                        && e.getFecha().get(Calendar.YEAR) == facturas.get(i).getFecha().get(Calendar.YEAR)){
                    System.out.println(facturas.get(i).getFecha().get(Calendar.MONTH));
                    agrupado.setSubTotal(agrupado.getSubTotal() + facturas.get(i).getSubTotal());
                    agrupado.setTotalIVA(agrupado.getTotalIVA() + facturas.get(i).getTotalIVA());
                    agrupado.setPrecioT(agrupado.getPrecioT() + facturas.get(i).getPrecioT());
                }
                i -= 1;
                System.out.println(facturas.get(i).getFecha().get(Calendar.MONTH));
                
                String[] row = {String.valueOf((e.getFecha().get(Calendar.MONTH)+1) + " - " + e.getFecha().get(Calendar.YEAR)),
                                String.valueOf(agrupado.getSubTotal()),
                                String.valueOf(agrupado.getTotalIVA()),
                                String.valueOf(agrupado.getPrecioT())
                                };
                modeloTabla.addRow(row);
            }
            }
        
        //ordenar por año
        if(comboFecha.getSelectedIndex()== 3){
            int tamanio = facturas.size();
            Factura agrupado = new Factura();
            
            for(int i=0; i < tamanio; i++){
                Factura e = facturas.get(i);
                agrupado.setSubTotal(e.getSubTotal());
                agrupado.setTotalIVA(e.getTotalIVA());
                agrupado.setPrecioT(e.getPrecioT());
                while(++i < tamanio && e.getFecha().get(Calendar.YEAR) == facturas.get(i).getFecha().get(Calendar.YEAR)){
                    System.out.println("i:" + i);
                    agrupado.setSubTotal(agrupado.getSubTotal() + facturas.get(i).getSubTotal());
                    agrupado.setTotalIVA(agrupado.getTotalIVA() + facturas.get(i).getTotalIVA());
                    agrupado.setPrecioT(agrupado.getPrecioT() + facturas.get(i).getPrecioT());
                }
                i -= 1;
     
                
                String[] row = {String.valueOf(e.getFecha().get(Calendar.YEAR)),
                                String.valueOf(agrupado.getSubTotal()),
                                String.valueOf(agrupado.getTotalIVA()),
                                String.valueOf(agrupado.getPrecioT())
                                };
                modeloTabla.addRow(row);
                agrupado = new Factura();
            }
            }
        tablaRegistroContable.setModel(modeloTabla);
    }//GEN-LAST:event_comboFechaActionPerformed

    private void btnBuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMousePressed

    private void btnBuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseReleased

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuFacturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnBuscar;
    private javax.swing.JPanel btnPagAtras;
    private javax.swing.JPanel btnPagSig;
    private javax.swing.JPanel btnregresar;
    private javax.swing.JComboBox<String> comboFecha;
    private com.toedter.calendar.JDateChooser dateFinal;
    private com.toedter.calendar.JDateChooser dateInicio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JTable tablaRegistroContable;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txtFechaFinal;
    private javax.swing.JLabel txtFechaInicio;
    private javax.swing.JLabel txtInventario;
    private javax.swing.JLabel txtLocal;
    private javax.swing.JLabel txtMostrarSegun;
    private javax.swing.JLabel txtPostPag;
    private javax.swing.JLabel txtPrePag;
    private javax.swing.JLabel txtRegresar;
    private javax.swing.JLabel txtRegresar1;
    private javax.swing.JLabel txtReloj;
    private javax.swing.JLabel txtpag;
    // End of variables declaration//GEN-END:variables

@Override
    public void run() {
        Thread ct = Thread.currentThread();
        
        while(ct == h1){
            calcula();
            txtReloj.setText("Hora: "+hora+":"+minuto+":"+segundo+" "+ampm);
            txtFecha.setText("Fecha: "+dia+"/"+mes+"/"+anio);
            try{
                Thread.sleep(1000); 
                }
            catch(InterruptedException e){
            
            }
        }

    }
    
    private void calcula() {
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();
        calendario.setTimeZone(TimeZone.getTimeZone("GMT-4:00"));
        mes=(String) String.valueOf(calendario.get(Calendar.MONTH)+1);
        anio=(String) String.valueOf(calendario.get(Calendar.YEAR));
        dia=(String) String.valueOf(calendario.get(Calendar.DAY_OF_MONTH));
        //calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == calendario.AM?"AM":"PM";
        
        if(ampm.equals("PM")){
            int h = calendario.get(calendario.HOUR_OF_DAY)-12;
            h = h == 0?12:h;
            hora = h>9?""+h:"0"+h;
        }else{
            hora = calendario.get(calendario.HOUR_OF_DAY)>9?""+calendario.get(calendario.HOUR_OF_DAY):"0"+calendario.get(calendario.HOUR_OF_DAY);
        }
        minuto = calendario.get(calendario.MINUTE)>9?""+calendario.get(calendario.MINUTE):"0"+calendario.get(calendario.MINUTE);
        segundo = calendario.get(calendario.SECOND)>9?""+calendario.get(calendario.SECOND):"0"+calendario.get(calendario.SECOND);
    }
}




