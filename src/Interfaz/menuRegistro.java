/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Controlador.Controladora;
///import static Interfaz.menuCaja.facturas;
import ClasesDocumentos.FacturaDoc;
import ClasesDocumentos.ImprecionPDF;
import static Interfaz.menuCaja.facturas;
//import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.awt.Color;
import java.text.ParseException;
//import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
//import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import proyectoferreteria.Cliente;
import proyectoferreteria.Factura;
 
/**
 *
 * @author VícAlex
 */
public class menuRegistro extends javax.swing.JFrame implements Runnable {
   
    String  hora,minuto,segundo,ampm,dia,mes,anio;
    Thread h1;
    Controladora control;
    static public ArrayList<Factura> facturas;
    FacturaDoc xmlFactura;
    public menuRegistro() throws ParseException {

        initComponents();
        setLocationRelativeTo(null);
        h1 = new Thread((Runnable) this);
        h1.start();
        control = new Controladora();
        
        xmlFactura=new FacturaDoc();
        this.facturas=xmlFactura.elementToArray();
        llenarTabla();
        
    }

    
     
    public int calculaSemana(Calendar fecha){
        int sem=0;
        int sel=-1;
        
        fecha.setFirstDayOfWeek( Calendar.MONDAY);
        fecha.setMinimalDaysInFirstWeek( 4 );
        //Calendar aux= new GregorianCalendar();
        //aux.setTime(fecha.getTime());
        //aux.set(Calendar.MONTH, aux.get(Calendar.MONTH)-1);
        
        
        sem=fecha.get(Calendar.WEEK_OF_YEAR); 
         
       
        return sem;
    }
    
    private void llenarTabla() throws ParseException{
        tablaRegistroContable.setModel(control.cargarTablaFacturas(facturas));
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);

        tablaRegistroContable.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        tablaRegistroContable.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        tablaRegistroContable.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
    }
    
    private void llenarTabla(DefaultTableModel modelo){
        tablaRegistroContable.setModel(modelo);
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);

        tablaRegistroContable.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        tablaRegistroContable.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        tablaRegistroContable.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistroContable = new javax.swing.JTable();
        btnregresar = new javax.swing.JPanel();
        txtRegresar = new javax.swing.JLabel();
        comboFecha = new javax.swing.JComboBox<>();
        txtFechaInicio = new javax.swing.JLabel();
        txtFechaFinal = new javax.swing.JLabel();
        dateInicio = new com.toedter.calendar.JDateChooser();
        dateFinal = new com.toedter.calendar.JDateChooser();
        txtMostrarSegun = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JPanel();
        txtRegresar1 = new javax.swing.JLabel();
        btnMasVendidos = new javax.swing.JPanel();
        txtMasVendidos = new javax.swing.JLabel();
        EliminarFactura = new javax.swing.JPanel();
        txtPDF = new javax.swing.JLabel();
        btnGenerarPDF = new javax.swing.JPanel();
        txtPDF1 = new javax.swing.JLabel();
        txtReloj = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        txtLocal = new javax.swing.JLabel();
        txtInventario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        panel1.setBackground(new java.awt.Color(16, 135, 60));

        panel2.setBackground(new java.awt.Color(10, 91, 40));
        panel2.setAlignmentX(1.0F);
        panel2.setAlignmentY(1.0F);

        tablaRegistroContable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tablaRegistroContable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Ingreso Bruto", "Gastos", "Ingreso Neto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaRegistroContable);
        if (tablaRegistroContable.getColumnModel().getColumnCount() > 0) {
            tablaRegistroContable.getColumnModel().getColumn(0).setPreferredWidth(50);
            tablaRegistroContable.getColumnModel().getColumn(1).setPreferredWidth(75);
            tablaRegistroContable.getColumnModel().getColumn(2).setPreferredWidth(75);
            tablaRegistroContable.getColumnModel().getColumn(3).setPreferredWidth(75);
        }

        btnregresar.setBackground(new java.awt.Color(16, 135, 61));
        btnregresar.setPreferredSize(new java.awt.Dimension(96, 34));
        btnregresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnregresarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnregresarMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnregresarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnregresarMouseEntered(evt);
            }
        });
        btnregresar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRegresar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtRegresar.setForeground(new java.awt.Color(255, 255, 255));
        txtRegresar.setText(" Regresar ");
        btnregresar.add(txtRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 30));

        comboFecha.setBackground(new java.awt.Color(16, 135, 61));
        comboFecha.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        comboFecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "semana", "mes", "año" }));
        comboFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 155, 81)));
        comboFecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboFechaFocusGained(evt);
            }
        });
        comboFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comboFechaMouseReleased(evt);
            }
        });
        comboFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFechaActionPerformed(evt);
            }
        });

        txtFechaInicio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtFechaInicio.setForeground(new java.awt.Color(255, 255, 255));
        txtFechaInicio.setText("Fecha Incio:");

        txtFechaFinal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtFechaFinal.setForeground(new java.awt.Color(255, 255, 255));
        txtFechaFinal.setText("Fecha Final:");

        dateInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dateInicioMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dateInicioMouseReleased(evt);
            }
        });

        txtMostrarSegun.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtMostrarSegun.setForeground(new java.awt.Color(255, 255, 255));
        txtMostrarSegun.setText("Mostrar Segun:");

        btnBuscar.setBackground(new java.awt.Color(16, 135, 61));
        btnBuscar.setPreferredSize(new java.awt.Dimension(96, 34));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, btnBuscar, org.jdesktop.beansbinding.ELProperty.create("Buscar por fechas"), btnBuscar, org.jdesktop.beansbinding.BeanProperty.create("toolTipText"));
        bindingGroup.addBinding(binding);

        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBuscarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBuscarMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
        });
        btnBuscar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRegresar1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        txtRegresar1.setForeground(new java.awt.Color(255, 255, 255));
        txtRegresar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtRegresar1.setText("Mostrar");
        btnBuscar.add(txtRegresar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 30));

        btnMasVendidos.setBackground(new java.awt.Color(16, 135, 61));
        btnMasVendidos.setPreferredSize(new java.awt.Dimension(96, 34));
        btnMasVendidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMasVendidosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMasVendidosMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnMasVendidosMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMasVendidosMouseReleased(evt);
            }
        });
        btnMasVendidos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMasVendidos.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtMasVendidos.setForeground(new java.awt.Color(255, 255, 255));
        txtMasVendidos.setText("Mas Vendidos");
        btnMasVendidos.add(txtMasVendidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 120, 30));

        EliminarFactura.setBackground(new java.awt.Color(16, 135, 61));
        EliminarFactura.setPreferredSize(new java.awt.Dimension(96, 34));
        EliminarFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EliminarFacturaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EliminarFacturaMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EliminarFacturaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                EliminarFacturaMouseReleased(evt);
            }
        });
        EliminarFactura.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPDF.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtPDF.setForeground(new java.awt.Color(255, 255, 255));
        txtPDF.setText("Eliminar Factura");
        EliminarFactura.add(txtPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 140, 30));

        btnGenerarPDF.setBackground(new java.awt.Color(16, 135, 61));
        btnGenerarPDF.setPreferredSize(new java.awt.Dimension(96, 34));
        btnGenerarPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnGenerarPDFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnGenerarPDFMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGenerarPDFMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGenerarPDFMouseEntered(evt);
            }
        });
        btnGenerarPDF.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPDF1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtPDF1.setForeground(new java.awt.Color(255, 255, 255));
        txtPDF1.setText("Generar PDF");
        btnGenerarPDF.add(txtPDF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 110, 30));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(txtFechaFinal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(txtFechaInicio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(txtMostrarSegun)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(410, 410, 410))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnMasVendidos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(btnGenerarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(EliminarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnregresar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnregresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(dateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMostrarSegun))
                            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtFechaFinal)
                                .addComponent(dateFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnMasVendidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenerarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EliminarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(61, 61, 61))
        );

        txtReloj.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtReloj.setForeground(new java.awt.Color(255, 255, 255));
        txtReloj.setText("Reloj");

        txtFecha.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(255, 255, 255));
        txtFecha.setText("Fecha");

        txtLocal.setFont(new java.awt.Font("Arial Black", 2, 24)); // NOI18N
        txtLocal.setForeground(new java.awt.Color(255, 255, 255));
        txtLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ultrpequeño-05.png"))); // NOI18N
        txtLocal.setText("Ferreluso");
        txtLocal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(10, 91, 40)));

        txtInventario.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        txtInventario.setForeground(new java.awt.Color(255, 255, 255));
        txtInventario.setText("Registro contable");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtInventario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtFecha)
                .addGap(18, 18, 18)
                .addComponent(txtReloj)
                .addGap(29, 29, 29))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInventario)
                    .addComponent(txtReloj)
                    .addComponent(txtFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnregresarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseEntered
        //crea el borde del "boton"
        btnregresar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnregresarMouseEntered

    private void btnregresarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseExited
        // cuando el raton sale del boton
        btnregresar.setBorder(null);
    }//GEN-LAST:event_btnregresarMouseExited

    private void btnregresarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMousePressed
        // cuando se presiona el boton
        btnregresar.setBorder(null);
    }//GEN-LAST:event_btnregresarMousePressed

    private void btnregresarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        btnregresar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
        menuEntrada obj = new menuEntrada();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnregresarMouseReleased

    private void dateInicioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateInicioMouseReleased
        JOptionPane.showMessageDialog(null,"Seleccionado");
    }//GEN-LAST:event_dateInicioMouseReleased

    private void dateInicioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateInicioMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_dateInicioMousePressed

    private void comboFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFechaActionPerformed
        String dato="";
        String[] columna = { "Fecha", "SubTotal","Impuestos","Ingreso Neto"};
        DefaultTableModel modeloTabla=new DefaultTableModel(null,columna);
        ArrayList<Factura> aux;
        ArrayList<Factura> aux2=new ArrayList<>(facturas);
        int i=0;
        Factura agrupado;
        if (comboFecha.getSelectedIndex()==0){
            txtPDF.setEnabled(true);
        }
        else txtPDF.setEnabled(false);
        
        
        //ordenar por semana
        if(comboFecha.getSelectedIndex()== 1){
            columna[0]="Semana";
            modeloTabla.setColumnIdentifiers(columna);
            while(0 < aux2.size()){
                aux=new ArrayList<>(aux2);
                try {
                    Factura e = aux.get(0);
                    int a = calculaSemana(e.getFecha());
                    agrupado = new Factura();
                    while(i < aux.size()){
                        if(a == calculaSemana(aux.get(i).getFecha())
                            && e.getFecha().get(Calendar.YEAR) == aux.get(i).getFecha().get(Calendar.YEAR)){
                            agrupado.setSubTotal(agrupado.getSubTotal() + aux.get(i).getSubTotal());
                            agrupado.setTotalIVA(agrupado.getTotalIVA() + aux.get(i).getTotalIVA());
                            agrupado.setPrecioT(agrupado.getPrecioT() + aux.get(i).getPrecioT());
                            aux2.remove(aux.get(i));
                        } 
                        i++;
                    }
                    i=0;  
                    String[] row = {String.valueOf(calculaSemana(e.getFecha()) + " - " + e.getFecha().get(Calendar.YEAR)),
                        control.parseToString(agrupado.getSubTotal()),
                        control.parseToString(agrupado.getTotalIVA()),
                        control.parseToString(agrupado.getPrecioT())
                    };
                    modeloTabla.addRow(row);
                } catch (ParseException ex) {
                    Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
                }                               
            }           
        }
        //ordenar por mes
        if(comboFecha.getSelectedIndex()== 2){
            columna[0]="Mes";
            modeloTabla.setColumnIdentifiers(columna);
            while(0 < aux2.size()){
                aux=new ArrayList<>(aux2);
                try {
                    Factura e = aux.get(0);
                    int a = calculaSemana(e.getFecha());
                    agrupado = new Factura();
                    while(i < aux.size()){
                        if(e.getFecha().get(Calendar.MONTH) == aux.get(i).getFecha().get(Calendar.MONTH) 
                                && e.getFecha().get(Calendar.YEAR) == aux.get(i).getFecha().get(Calendar.YEAR)){
                            agrupado.setSubTotal(agrupado.getSubTotal() + aux.get(i).getSubTotal());
                            agrupado.setTotalIVA(agrupado.getTotalIVA() + aux.get(i).getTotalIVA());
                            agrupado.setPrecioT(agrupado.getPrecioT() + aux.get(i).getPrecioT());
                            aux2.remove(aux.get(i));
                        } 
                        i++;
                    }
                    i=0;                       
                    String[] row = {String.valueOf((e.getFecha().get(Calendar.MONTH)+1) + " - " + e.getFecha().get(Calendar.YEAR)),
                        control.parseToString(agrupado.getSubTotal()),
                        control.parseToString(agrupado.getTotalIVA()),
                        control.parseToString(agrupado.getPrecioT())
                    };
                    modeloTabla.addRow(row);
                } catch (ParseException ex) {
                    Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        //ordenar por año
        if(comboFecha.getSelectedIndex()== 3){
            columna[0]="Año";
            modeloTabla.setColumnIdentifiers(columna);
            while(0 < aux2.size()){
                aux=new ArrayList<>(aux2);
                try {
                    Factura e = aux.get(0);
                    int a = calculaSemana(e.getFecha());
                    agrupado = new Factura();
                    while(i < aux.size()){
                        if(e.getFecha().get(Calendar.YEAR) == aux.get(i).getFecha().get(Calendar.YEAR)){
                            agrupado.setSubTotal(agrupado.getSubTotal() + aux.get(i).getSubTotal());
                            agrupado.setTotalIVA(agrupado.getTotalIVA() + aux.get(i).getTotalIVA());
                            agrupado.setPrecioT(agrupado.getPrecioT() + aux.get(i).getPrecioT());
                            aux2.remove(aux.get(i));
                        } 
                        i++;
                    }
                    i=0; 
            
                    
                    String[] row = {String.valueOf(e.getFecha().get(Calendar.YEAR)),
                        control.parseToString(agrupado.getSubTotal()),
                        control.parseToString(agrupado.getTotalIVA()),
                        control.parseToString(agrupado.getPrecioT())
                    };
                    
                    modeloTabla.addRow(row);
                    agrupado = new Factura();
                } catch (ParseException ex) {
                    Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            } 
        llenarTabla(modeloTabla);
        
        //ordenar por  defecto
        if(comboFecha.getSelectedIndex()== 0){
            dato="Fecha";
            try {
                llenarTabla();
            } catch (ParseException ex) {
                Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_comboFechaActionPerformed

    private void btnBuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMousePressed
        // cuando se presiona el boton
        btnBuscar.setBorder(null);
    }//GEN-LAST:event_btnBuscarMousePressed

    private void btnBuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        
        btnBuscar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
        if ((dateInicio.getCalendar()!=null) && (dateFinal.getCalendar()!=null) && (dateFinal.getCalendar().compareTo(dateInicio.getCalendar())>=0)){
            comboFecha.setSelectedIndex(0);
            txtPDF.setEnabled(true);
            try {
                ArrayList<Factura> lista1 = new ArrayList<>() ;
                ArrayList<Factura> lista=facturas;
                for(Factura e: lista){                  
                    if((dateInicio.getCalendar().compareTo(e.getFecha())<=0) && (dateFinal.getCalendar().compareTo(e.getFecha())>=0)){
                        lista1.add(e);
                        System.out.println(e.getNumFactura());
                    }
                    
                }
                tablaRegistroContable.setModel(control.cargarTablaFacturas(lista1));
            } catch (ParseException ex) {
                Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
    }//GEN-LAST:event_btnBuscarMouseReleased

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        // cuando el raton sale del boton
        btnBuscar.setBorder(null);
    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        //crea el borde del "boton"
        btnBuscar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnBuscarMouseEntered

    private void btnMasVendidosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMasVendidosMouseEntered
        //crea el borde del "boton"
        btnMasVendidos.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnMasVendidosMouseEntered

    private void btnMasVendidosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMasVendidosMouseExited
        // cuando el raton sale del boton
        btnMasVendidos.setBorder(null);
    }//GEN-LAST:event_btnMasVendidosMouseExited

    private void btnMasVendidosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMasVendidosMousePressed
        // cuando se presiona el boton
        btnMasVendidos.setBorder(null);
    }//GEN-LAST:event_btnMasVendidosMousePressed

    private void btnMasVendidosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMasVendidosMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        btnMasVendidos.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
        menuMasVendidos obj = new menuMasVendidos(facturas);
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnMasVendidosMouseReleased

    private void comboFechaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboFechaFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_comboFechaFocusGained

    private void EliminarFacturaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarFacturaMouseEntered
        //crea el borde del "boton"
        if (txtPDF.isEnabled())
        EliminarFactura.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_EliminarFacturaMouseEntered

    private void EliminarFacturaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarFacturaMouseExited
        // cuando el raton sale del boton
        EliminarFactura.setBorder(null);
    }//GEN-LAST:event_EliminarFacturaMouseExited

    private void EliminarFacturaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarFacturaMousePressed
        // cuando se presiona el boton
        EliminarFactura.setBorder(null);
    }//GEN-LAST:event_EliminarFacturaMousePressed

    private void EliminarFacturaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarFacturaMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        if (txtPDF.isEnabled()){
        if(tablaRegistroContable.getSelectedRow() != -1){
        int confirmacion = JOptionPane.showOptionDialog(
                        null,"¿Desea Eliminar esta Factura?", "::::...Confirmación...:::",
                        JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,null,null);
        if (confirmacion==0) {
        
        
            int seleccion = tablaRegistroContable.getSelectedRow();
            String NumFactura  = (String) tablaRegistroContable.getValueAt(seleccion,1);
            String Sub = (String) tablaRegistroContable.getValueAt(seleccion,2);
            String IVA = (String) tablaRegistroContable.getValueAt(seleccion,3);
            String Total = (String) tablaRegistroContable.getValueAt(seleccion,4);
        ImprecionPDF facturar = new ImprecionPDF("Devolucion-de-Factura-Nro" + NumFactura);
            try {
                facturar.crearDevolucion(NumFactura, Sub, IVA, Total);
            } catch (ParseException ex) {
                Logger.getLogger(menuCaja.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                menuRegistro FacturaActual = new menuRegistro();
                FacturaActual.setVisible(true);
        dispose();
            } catch (ParseException ex) {
                Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }else{
            JOptionPane.showMessageDialog(null, "Debe Seleccionar una Factura para Poder Eliminarla","Advertencia",2);
        }
        }
    }//GEN-LAST:event_EliminarFacturaMouseReleased

    private void btnGenerarPDFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGenerarPDFMouseEntered
        // TODO add your handling code here:
        btnGenerarPDF.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnGenerarPDFMouseEntered

    private void btnGenerarPDFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGenerarPDFMouseExited
        // TODO add your handling code here:
        btnGenerarPDF.setBorder(null);
    }//GEN-LAST:event_btnGenerarPDFMouseExited

    private void btnGenerarPDFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGenerarPDFMousePressed
        // TODO add your handling code here:
        btnGenerarPDF.setBorder(null);
    }//GEN-LAST:event_btnGenerarPDFMousePressed

    private void btnGenerarPDFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGenerarPDFMouseReleased
        // TODO add your handling code here:
        btnGenerarPDF.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
        ImprecionPDF PDF = new ImprecionPDF();
        try {
            PDF.crearFacturasPDF();
        } catch (ParseException ex) {
            Logger.getLogger(menuEntrada.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerarPDFMouseReleased

    private void comboFechaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboFechaMouseReleased
        // TODO add your handling code here:
        if (dateInicio.getCalendar()!=null||dateFinal.getCalendar()!=null){
            try {
                dateInicio.setCalendar(null);
                dateFinal.setCalendar(null);
                llenarTabla();
            } catch (ParseException ex) {
                Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_comboFechaMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new menuRegistro().setVisible(true);
            } catch (ParseException ex) {
                Logger.getLogger(menuRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EliminarFactura;
    private javax.swing.JPanel btnBuscar;
    private javax.swing.JPanel btnGenerarPDF;
    private javax.swing.JPanel btnMasVendidos;
    private javax.swing.JPanel btnregresar;
    private javax.swing.JComboBox<String> comboFecha;
    private com.toedter.calendar.JDateChooser dateFinal;
    private com.toedter.calendar.JDateChooser dateInicio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JTable tablaRegistroContable;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txtFechaFinal;
    private javax.swing.JLabel txtFechaInicio;
    private javax.swing.JLabel txtInventario;
    private javax.swing.JLabel txtLocal;
    private javax.swing.JLabel txtMasVendidos;
    private javax.swing.JLabel txtMostrarSegun;
    private javax.swing.JLabel txtPDF;
    private javax.swing.JLabel txtPDF1;
    private javax.swing.JLabel txtRegresar;
    private javax.swing.JLabel txtRegresar1;
    private javax.swing.JLabel txtReloj;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

@Override
    public void run() {
        Thread ct = Thread.currentThread();
        
        while(ct == h1){
            calcula();
            txtReloj.setText("Hora: "+hora+":"+minuto+":"+segundo+" "+ampm);
            txtFecha.setText("Fecha: "+dia+"/"+mes+"/"+anio);
            try{
                Thread.sleep(1000); 
                }
            catch(InterruptedException e){
            
            }
        }

    }
    
    private void calcula() {
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();
        calendario.setTimeZone(TimeZone.getTimeZone("GMT-4:00"));
        mes=(String) String.valueOf(calendario.get(Calendar.MONTH)+1);
        anio=(String) String.valueOf(calendario.get(Calendar.YEAR));
        dia=(String) String.valueOf(calendario.get(Calendar.DAY_OF_MONTH));
        //calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == calendario.AM?"AM":"PM";
        
        if(ampm.equals("PM")){
            int h = calendario.get(calendario.HOUR_OF_DAY)-12;
            h = h == 0?12:h;
            hora = h>9?""+h:"0"+h;
        }else{
            hora = calendario.get(calendario.HOUR_OF_DAY)>9?""+calendario.get(calendario.HOUR_OF_DAY):"0"+calendario.get(calendario.HOUR_OF_DAY);
        }
        minuto = calendario.get(calendario.MINUTE)>9?""+calendario.get(calendario.MINUTE):"0"+calendario.get(calendario.MINUTE);
        segundo = calendario.get(calendario.SECOND)>9?""+calendario.get(calendario.SECOND):"0"+calendario.get(calendario.SECOND);
    }
    
    
}




