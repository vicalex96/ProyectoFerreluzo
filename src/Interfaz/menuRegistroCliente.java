/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Controlador.Controladora;
import ClasesDocumentos.ClienteDoc;
import java.awt.Color;
import java.awt.Window;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import proyectoferreteria.Cliente;

/**
 *
 * @author VÃ­cAlex
 */
public class menuRegistroCliente extends javax.swing.JFrame implements Runnable {

    String  hora,minuto,segundo,ampm,dia,mes,anio;
    Thread h1;
    ArrayList<Cliente> Clientes;
    Controladora control;
    menuEditarCliente obj = new menuEditarCliente();
    Cliente persona;
    ClienteDoc xmlListado;
    
    /**
     * Creates new form menuOtrosRegistros
     * @param Clientes
     */
    //@SuppressWarnings("unchecked");
    public menuRegistroCliente() {
        initComponents();
        setLocationRelativeTo(null);
        h1 = new Thread(this);
        h1.start();
        xmlListado = new ClienteDoc();
        tablaRegistroCliente.setModel(xmlListado.cargarTablaCliente());
       comboCritero.requestFocus();
        
    }
     
    public void actualizarTabla(){
        tablaRegistroCliente.setModel(xmlListado.cargarTablaCliente());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistroCliente = new javax.swing.JTable();
        btnregresar = new javax.swing.JPanel();
        txtRegresar = new javax.swing.JLabel();
        fieldBuscar = new javax.swing.JTextField();
        comboCritero = new javax.swing.JComboBox<>();
        btnEliminar = new javax.swing.JPanel();
        txtEliminar = new javax.swing.JLabel();
        btnEditar = new javax.swing.JPanel();
        txtEditar = new javax.swing.JLabel();
        txtReloj = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        txtLocal = new javax.swing.JLabel();
        txtInventario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        panel1.setBackground(new java.awt.Color(16, 135, 60));

        panel2.setBackground(new java.awt.Color(10, 91, 40));
        panel2.setAlignmentX(1.0F);
        panel2.setAlignmentY(1.0F);

        tablaRegistroCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tablaRegistroCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre de Cliente", "CI/RIF", "Direccion", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaRegistroCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaRegistroClienteMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaRegistroCliente);
        if (tablaRegistroCliente.getColumnModel().getColumnCount() > 0) {
            tablaRegistroCliente.getColumnModel().getColumn(0).setPreferredWidth(75);
            tablaRegistroCliente.getColumnModel().getColumn(1).setPreferredWidth(50);
            tablaRegistroCliente.getColumnModel().getColumn(2).setPreferredWidth(200);
            tablaRegistroCliente.getColumnModel().getColumn(3).setPreferredWidth(75);
        }

        btnregresar.setBackground(new java.awt.Color(16, 135, 61));
        btnregresar.setPreferredSize(new java.awt.Dimension(96, 34));
        btnregresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnregresarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnregresarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnregresarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnregresarMouseReleased(evt);
            }
        });
        btnregresar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRegresar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtRegresar.setForeground(new java.awt.Color(255, 255, 255));
        txtRegresar.setText(" Regresar ");
        btnregresar.add(txtRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 30));

        fieldBuscar.setBackground(new java.awt.Color(16, 135, 61));
        fieldBuscar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        fieldBuscar.setForeground(new java.awt.Color(255, 255, 255,150));
        fieldBuscar.setText("Buscar");
        fieldBuscar.setToolTipText("Buscar");
        fieldBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 155, 81)));
        fieldBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldBuscarFocusLost(evt);
            }
        });
        fieldBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fieldBuscarMouseReleased(evt);
            }
        });
        fieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldBuscarKeyReleased(evt);
            }
        });

        comboCritero.setBackground(new java.awt.Color(16, 135, 61));
        comboCritero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboCritero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "CI/RIF" }));
        comboCritero.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 155, 81)));
        comboCritero.requestFocus();

        btnEliminar.setBackground(new java.awt.Color(16, 135, 61));
        btnEliminar.setEnabled(false);
        btnEliminar.setPreferredSize(new java.awt.Dimension(96, 34));
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEliminarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEliminarMouseReleased(evt);
            }
        });
        btnEliminar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEliminar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtEliminar.setForeground(new java.awt.Color(255, 255, 255));
        txtEliminar.setText("Eliminar");
        txtEliminar.setEnabled(false);
        btnEliminar.add(txtEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 70, 30));

        btnEditar.setBackground(new java.awt.Color(16, 135, 61));
        btnEditar.setEnabled(false);
        btnEditar.setPreferredSize(new java.awt.Dimension(96, 34));
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEditarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEditarMouseReleased(evt);
            }
        });
        btnEditar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEditar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtEditar.setForeground(new java.awt.Color(255, 255, 255));
        txtEditar.setText("Editar");
        txtEditar.setEnabled(false);
        btnEditar.add(txtEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 50, 30));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnregresar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 907, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel2Layout.createSequentialGroup()
                        .addComponent(fieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboCritero, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCritero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnregresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        txtReloj.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtReloj.setForeground(new java.awt.Color(255, 255, 255));
        txtReloj.setText("Reloj");

        txtFecha.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(255, 255, 255));
        txtFecha.setText("Fecha");

        txtLocal.setFont(new java.awt.Font("Arial Black", 2, 24)); // NOI18N
        txtLocal.setForeground(new java.awt.Color(255, 255, 255));
        txtLocal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ultrpequeÃ±o-05.png"))); // NOI18N
        txtLocal.setText("Ferreluso");
        txtLocal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(10, 91, 40)));

        txtInventario.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        txtInventario.setForeground(new java.awt.Color(255, 255, 255));
        txtInventario.setText("RegistroCliente");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtInventario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtFecha)
                .addGap(18, 18, 18)
                .addComponent(txtReloj)
                .addGap(29, 29, 29))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInventario)
                    .addComponent(txtReloj)
                    .addComponent(txtFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnregresarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseEntered
        //crea el borde del "boton"
        btnregresar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnregresarMouseEntered

    private void btnregresarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseExited
        // cuando el raton sale del boton
        btnregresar.setBorder(null);
    }//GEN-LAST:event_btnregresarMouseExited

    private void btnregresarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMousePressed
        // cuando se presiona el boton
        btnregresar.setBorder(null);
    }//GEN-LAST:event_btnregresarMousePressed

    private void btnregresarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnregresarMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        btnregresar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
        menuEntrada obj = new menuEntrada();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnregresarMouseReleased

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        //crea el borde del "boton"
        if (tablaRegistroCliente.getSelectedRow()!=-1)
        btnEliminar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        // cuando el raton sale del boton
        btnEliminar.setBorder(null);
    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnEliminarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMousePressed
        // cuando se presiona el boton
        btnEliminar.setBorder(null);
    }//GEN-LAST:event_btnEliminarMousePressed

    private void btnEliminarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        if (tablaRegistroCliente.getSelectedRow()!=-1){
        btnEliminar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
        int i = tablaRegistroCliente.getSelectedRow();
            String CI_RIF =(String) tablaRegistroCliente.getValueAt(i, 1);
            xmlListado.eliminarCliente(CI_RIF);
            tablaRegistroCliente.setModel(xmlListado.cargarTablaCliente());
        }
    }//GEN-LAST:event_btnEliminarMouseReleased

    private void btnEditarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseEntered
        if (tablaRegistroCliente.getSelectedRow()!=-1)
        btnEditar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77)));
    }//GEN-LAST:event_btnEditarMouseEntered

    private void btnEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseExited
        // cuando el raton sale del boton
        btnEditar.setBorder(null);
    }//GEN-LAST:event_btnEditarMouseExited

    private void btnEditarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMousePressed
        // cuando se presiona el boton
        btnEditar.setBorder(null);
    }//GEN-LAST:event_btnEditarMousePressed

    private void btnEditarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseReleased
        // cuando se suelta el boton
        // Aqui se ejecuta el codigo del boton
        if (tablaRegistroCliente.getSelectedRow()!=-1){
            btnEditar.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2,Color.getHSBColor(143, 30, 77))); 
            int i = tablaRegistroCliente.getSelectedRow();
            Cliente persona1 = new Cliente();
                    persona1.setNombre((String)tablaRegistroCliente.getValueAt(i, 0));
                    persona1.setDocumento((String)tablaRegistroCliente.getValueAt(i, 1));
                    persona1.setDireccion((String)tablaRegistroCliente.getValueAt(i, 2));
                    persona1.setTelefono((String)tablaRegistroCliente.getValueAt(i, 3));
                    
            menuEditarCliente ventana = new menuEditarCliente(xmlListado,persona1,this);
            ventana.setVisible(true);
            setEnabled(false);
        }
    }//GEN-LAST:event_btnEditarMouseReleased

    private void fieldBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldBuscarKeyReleased
        // TODO add your handling code here:
        DefaultTableModel modelo;
        modelo = xmlListado.filtrarTablaCliente(fieldBuscar.getText(),
                                 comboCritero.getSelectedIndex());
        tablaRegistroCliente.setModel(modelo);

    }//GEN-LAST:event_fieldBuscarKeyReleased

    private void tablaRegistroClienteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaRegistroClienteMouseReleased
        // TODO add your handling code here:
        if (tablaRegistroCliente.getSelectedRow()!=-1){
           
            btnEditar.setEnabled(true);
            txtEditar.setEnabled(true);
            btnEliminar.setEnabled(true);
            txtEliminar.setEnabled(true);
        }
    }//GEN-LAST:event_tablaRegistroClienteMouseReleased

    private void fieldBuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldBuscarMouseReleased
        // TODO add your handling code here:
        if("Buscar".equals(fieldBuscar.getText())){
            fieldBuscar.setText("");
            fieldBuscar.setForeground(new Color(255,255,255));
         }
    }//GEN-LAST:event_fieldBuscarMouseReleased

    private void fieldBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldBuscarFocusLost
        // TODO add your handling code here:
        if (fieldBuscar.getText().equals("")){
            fieldBuscar.setForeground(new Color(255,255,255,150));
            fieldBuscar.setText("Buscar");
        }
    }//GEN-LAST:event_fieldBuscarFocusLost

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuRegistroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuRegistroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuRegistroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuRegistroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuRegistroCliente().setVisible(true);
            }
        });
        

    }

    public void setTablaRegistroCliente(JTable tablaRegistroCliente) {
        this.tablaRegistroCliente = tablaRegistroCliente;
    }

    public JTable getTablaRegistroCliente() {
        return tablaRegistroCliente;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnEditar;
    private javax.swing.JPanel btnEliminar;
    private javax.swing.JPanel btnregresar;
    private javax.swing.JComboBox<String> comboCritero;
    private javax.swing.JTextField fieldBuscar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JTable tablaRegistroCliente;
    private javax.swing.JLabel txtEditar;
    private javax.swing.JLabel txtEliminar;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txtInventario;
    private javax.swing.JLabel txtLocal;
    private javax.swing.JLabel txtRegresar;
    private javax.swing.JLabel txtReloj;
    // End of variables declaration//GEN-END:variables
@Override
    public void run() {
        Thread ct = Thread.currentThread();
        
        while(ct == h1){
            calcula();
            txtReloj.setText("Hora: "+hora+":"+minuto+":"+segundo+" "+ampm);
            txtFecha.setText("Fecha: "+dia+"/"+mes+"/"+anio);
            try{
                Thread.sleep(1000); 
                }
            catch(InterruptedException e){
            
            }
        }

    }
    
    private void calcula() {
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();
        calendario.setTimeZone(TimeZone.getTimeZone("GMT-4:00"));
        mes=(String) String.valueOf(calendario.get(Calendar.MONTH)+1);
        anio=(String) String.valueOf(calendario.get(Calendar.YEAR));
        dia=(String) String.valueOf(calendario.get(Calendar.DAY_OF_MONTH));
        //calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == calendario.AM?"AM":"PM";
        
        if(ampm.equals("PM")){
            int h = calendario.get(calendario.HOUR_OF_DAY)-12;
            h = h == 0?12:h;
            hora = h>9?""+h:"0"+h;
        }else{
            hora = calendario.get(calendario.HOUR_OF_DAY)>9?""+calendario.get(calendario.HOUR_OF_DAY):"0"+calendario.get(calendario.HOUR_OF_DAY);
        }
        minuto = calendario.get(calendario.MINUTE)>9?""+calendario.get(calendario.MINUTE):"0"+calendario.get(calendario.MINUTE);
        segundo = calendario.get(calendario.SECOND)>9?""+calendario.get(calendario.SECOND):"0"+calendario.get(calendario.SECOND);
    }
}
